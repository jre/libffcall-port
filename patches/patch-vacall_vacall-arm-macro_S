$OpenBSD$

Update asm to build with clang

Index: vacall/vacall-arm-macro.S
--- vacall/vacall-arm-macro.S.orig
+++ vacall/vacall-arm-macro.S
@@ -34,15 +34,15 @@ L(36):
 	cmp	r2, $1
 	beq	L(39)
 	cmp	r2, $2
-	ldreqsb	r0, [fp, $-40]
+	ldrsbeq	r0, [fp, $-40]
 	beq	L(1)
 	cmp	r2, $3
 	beq	L(39)
 	cmp	r2, $4
-	ldreqsh	r0, [fp, $-40]
+	ldrsheq	r0, [fp, $-40]
 	beq	L(1)
 	cmp	r2, $5
-	ldreqh	r0, [fp, $-40]
+	ldrheq	r0, [fp, $-40]
 	beq	L(1)
 	cmp	r2, $6
 	beq	L(38)
@@ -73,12 +73,12 @@ L(40):
 	ldr	r3, [fp, $-20]
 	cmp	r3, $1
 	ldreq	r3, [fp, $-28]
-	ldreqb	r0, [r3, $0]	// zero_extendqisi2
+	ldrbeq	r0, [r3, $0]	// zero_extendqisi2
 	beq	L(1)
 	cmp	r3, $2
 	ldreq	r3, [fp, $-28]
 	ldrne	r3, [fp, $-28]
-	ldreqh	r0, [r3, $0]
+	ldrheq	r0, [r3, $0]
 	ldrne	r0, [r3, $0]
 	b	L(1)
 L(38):
@@ -129,15 +129,15 @@ FUNBEGIN(vacall_receiver)
 	cmp	r2, $1
 	beq	L(38)
 	cmp	r2, $2
-	ldreqsb	r0, [fp, $-36]
+	ldrsbeq	r0, [fp, $-36]
 	beq	L(1)
 	cmp	r2, $3
 	beq	L(38)
 	cmp	r2, $4
-	ldreqsh	r0, [fp, $-36]
+	ldrsheq	r0, [fp, $-36]
 	beq	L(1)
 	cmp	r2, $5
-	ldreqh	r0, [fp, $-36]
+	ldrheq	r0, [fp, $-36]
 	beq	L(1)
 	cmp	r2, $6
 	beq	L(37)
@@ -168,12 +168,12 @@ L(39):
 	ldr	r3, [fp, $-16]
 	cmp	r3, $1
 	ldreq	r3, [fp, $-24]
-	ldreqb	r0, [r3, $0]	// zero_extendqisi2
+	ldrbeq	r0, [r3, $0]	// zero_extendqisi2
 	beq	L(1)
 	cmp	r3, $2
 	ldreq	r3, [fp, $-24]
 	ldrne	r3, [fp, $-24]
-	ldreqh	r0, [r3, $0]
+	ldrheq	r0, [r3, $0]
 	ldrne	r0, [r3, $0]
 	b	L(1)
 L(37):
